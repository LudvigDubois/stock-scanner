# delete_ticker_data.py
# Description: A utility to delete all price data for tickers listed in a file
# or for a single, manually specified ticker.
# Author: Gemini
# Version: 2.0

import sqlite3

# --- Configuration ---
DB_FILE = "stock_market_data.db"
# To delete a single ticker, set its symbol here.
# To delete from a file, set this to None.
TICKER_TO_DELETE = None 
# The file generated by the data_audit.py script
TICKERS_FILE = "tickers_to_fix.txt"

def delete_data_for_tickers(tickers_list):
    """
    Connects to the database and deletes all rows from the daily_data
    table for each ticker in the provided list.
    """
    if not tickers_list:
        print("Ticker list is empty. Nothing to do.")
        return
        
    try:
        conn = sqlite3.connect(DB_FILE)
        cursor = conn.cursor()
        
        print(f"Attempting to delete price data for {len(tickers_list)} tickers...")
        
        # Use a parameterized query to safely delete the data for each ticker
        cursor.executemany("DELETE FROM daily_data WHERE ticker = ?", [(t,) for t in tickers_list])
        
        conn.commit()
        
        deleted_rows = cursor.rowcount
        conn.close()
        
        # Note: cursor.rowcount for executemany is not always reliable across all sqlite versions.
        # A non-zero value indicates success.
        if deleted_rows != 0:
            print(f"Success. Price data for {len(tickers_list)} tickers has been cleared.")
            print("You can now run the data_fetcher.py script to backfill the correct data.")
        else:
            print("No matching data found in the database. Nothing was deleted.")

    except sqlite3.Error as e:
        print(f"An error occurred while trying to delete data: {e}")

if __name__ == "__main__":
    tickers_to_process = []
    
    if TICKER_TO_DELETE:
        tickers_to_process.append(TICKER_TO_DELETE)
        print(f"This script is set to delete data for a single ticker: '{TICKER_TO_DELETE}'.")
    else:
        try:
            with open(TICKERS_FILE, 'r') as f:
                tickers_to_process = [line.strip() for line in f if line.strip()]
            if tickers_to_process:
                print(f"This script is set to delete data for {len(tickers_to_process)} tickers from '{TICKERS_FILE}'.")
            else:
                print(f"'{TICKERS_FILE}' is empty. No tickers to process.")
        except FileNotFoundError:
            print(f"Error: '{TICKERS_FILE}' not found. Set a TICKER_TO_DELETE manually or run the audit first.")

    if tickers_to_process:
        confirm = input("Are you sure you want to proceed? (y/n): ")
        if confirm.lower() == 'y':
            delete_data_for_tickers(tickers_to_process)
        else:
            print("Operation cancelled.")
